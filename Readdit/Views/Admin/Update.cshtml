@model Readdit.Models.UpdateViewModel

@{
    ViewData["Title"] = "Update";
}


<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }

        .editable {
            cursor: pointer;
        }
    </style>
</head>
<body>
    <form asp-action="Update" method="post">
    <h1>Update</h1>

    <h2>Users</h2>
    <table>
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email Address</th>
                <th>Date Created</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td class="editable">@Html.EditorFor(model => user.FirstName)</td>
                    <td class="editable">@Html.EditorFor(model => user.LastName)</td>
                    <td class="editable">@Html.EditorFor(model => user.Email)</td>
                    <td>@user.UserCreatedDate.ToString("yyyy-MM-dd")</td>
                    
                    <td><button type="submit" class="save-btn">Save</button></td>e344

                    
                </tr>
            }
        </tbody>
    </table>
    </form>

    <form asp-action="Update" method="post">
    <h2>Books</h2>
    <table>
        <thead>
            <tr>
                <th>Book Name</th>
                <th>Author</th>
                <th>Pages</th>
                <th>Genre</th>
                <th>Date Added</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Model.Books)
            {
                <tr>
                    <td class="editable">@Html.EditorFor(model => book.book_name)</td>
                    <td class="editable">@Html.EditorFor(model => book.author_name)</td>
                    <td class="editable">@Html.EditorFor(model => book.book_genre)</td>
                    <td>@book.date_added.ToString("yyyy-MM-dd")</td>
                     <td><button type="submit" class="save-btn">Save</button></td>
                </tr>
            }
        </tbody>
    </table>
</form>

    <script>
        document.querySelectorAll('.editable').forEach(function (cell) {
            cell.addEventListener('click', function () {
                // Replace the cell's content with an input field for editing
                var value = this.textContent.trim();
                var input = document.createElement('input');
                input.type = 'text';
                input.value = value;
                input.classList.add('edit-input');

                // Replace the cell's content with the input field
                this.innerHTML = '';
                this.appendChild(input);

                // Focus on the input field
                input.focus();
            });
        });

        // Add keypress event listener to input fields for editing
        document.addEventListener('keypress', function (event) {
            // Check if the pressed key is Enter (key code 13)
            if (event.keyCode === 13) {
                // Get the active input field
                var activeInput = document.querySelector('.edit-input');
                if (activeInput) {
                    // Get the value from the input field
                    var value = activeInput.value.trim();

                    // Replace the input field with the new value
                    activeInput.parentElement.textContent = value;
                }
            }
        });

        // Add click event listener to save buttons
        document.querySelectorAll('.save-btn').forEach(function (button) {
            button.addEventListener('click', function () {
                // Get the form associated with the button
                var form = this.closest('form');
                // Submit the form
                form.submit();
            });
        });

            fetch('/Admin/Update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedValues)
            })
                .then(response => {
                    if (response.ok) {
                        // Handle success
                        alert('Changes saved successfully.');
                        // Optionally, redirect to another page
                        window.location.href = '/Admin/Details'; // Redirect to details page
                    } else {
                        // Handle failure
                        alert('Failed to save changes.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while processing the request.');
                });
        });
    </script>

</body>
</html>
