@model Readdit.Models.UpdateViewModel

@{
    ViewData["Title"] = "Update";
}


<!DOCTYPE html>
<html>
<head>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }

        .editable {
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Update</h1>

    <form asp-action="UpdateUsers" method="post">
        <h2>Users</h2>
        <table>
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email Address</th>
                    <th>Date Created</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    <tr>
                        <td>@Html.EditorFor(model => user.FirstName)</td>
                        <td>@Html.EditorFor(model => user.LastName)</td>
                        <td>@Html.EditorFor(model => user.Email)</td>
                        <td>@user.UserCreatedDate.ToString("yyyy-MM-dd")</td>
                    </tr>
                }
            </tbody>
        </table>
        <button type="submit" class="save-btn">Save Users</button>
    </form>

    <form asp-controller="Admin" asp-action="UpdateBooks" method="post">
        <h2>Books</h2>
        <table>
            <thead>
                <tr>
                    <th>Book Name</th>
                    <th>Author</th>
                    <th>Genre</th>
                    <th>Date Added</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in Model.Books)
                {
                    <tr>
                        <td>@Html.EditorFor(model => book.book_name)</td>
                        <td>@Html.EditorFor(model => book.author_name)</td>
                        <td>@Html.EditorFor(model => book.book_genre)</td>
                        <td>@book.date_added.ToString("yyyy-MM-dd")</td>
                    </tr>
                }
            </tbody>
        </table>
        <button type="submit" class="save-btn">Save Books</button>
    </form>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <script>
        document.querySelectorAll('.editable').forEach(function (cell) {
            cell.addEventListener('click', function () {
                var value = this.textContent.trim();
                var input = document.createElement('input');
                input.type = 'text';
                input.value = value;
                input.classList.add('edit-input');
                this.innerHTML = '';
                this.appendChild(input);

                // Focus on the input field
                input.focus();
            });
        });

        // Add click event listener to save buttons
        document.querySelectorAll('.save-btn').forEach(function (button) {
            button.addEventListener('click', function () {
                // Get the form associated with the button
                var form = this.closest('form');
                // Submit the form
                form.submit();
            });
        });

        // Handle form submission
        document.querySelectorAll('form').forEach(function (form) {
            form.addEventListener('submit', function (event) {
                event.preventDefault(); 
                var formData = new FormData(form); 

                fetch(form.action, {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            // Handle success
                            alert('Changes saved successfully.');
                            window.location.reload(); // Refresh the page
                        } else {
                            // Handle failure
                            alert('Failed to save changes.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while processing the request.');
                    });
            });
        });
    </script>

</body>
</html> 

