@model Readdit.Models.Book

@if (ViewBag.Errors != null)
{
    <div class="alert alert-danger">
        <h4>Validation Errors:</h4>
        <ul>
            @foreach (var error in ViewBag.Errors)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}

@if (ViewData["Message"] != null)
{
    <div class="alert alert-success">
        <h4>@ViewData["Message"]</h4>
    </div>
}
else
{
    <h1>Add a Book to the Directory</h1>
    <br />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="book_id" />
                <div class="form-group">
                    <label asp-for="book_name" class="control-label">Book Name:</label>
                    <input asp-for="book_name" class="form-control" />
                    <span asp-validation-for="book_name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="author_name" class="control-label">Author Name:</label>
                    <input asp-for="author_name" class="form-control" />
                    <span asp-validation-for="author_name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="book_genre" class="control-label">Book Genre:</label>
                    <input asp-for="book_genre" class="form-control" />
                    <span asp-validation-for="book_genre" class="text-danger"></span>
                </div>
                <br />
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    <a class="btn btn-primary" asp-action="Index">Return</a>
                </div>
            </form>
        </div>
    </div>
}




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


    <script>
    document.getElementById("createBookForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Get form data
        var formData = new FormData(this);

        fetch("/Admin/Create", {
            method: "POST",
            body: formData,
            headers: {
                "Accept": "application/json",
                "X-Requested-With": "XMLHttpRequest"
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    window.location.href = "/Admin/Index";
                } else {
                    var errorMessages = data.errors.join("\n");
                    alert("Failed to add book to the directory:\n" + errorMessages);
                }
            })
            .catch(error => {
                console.error("Error:", error);
                alert("An error occurred while processing the request.");
            });
    });


    </script>

