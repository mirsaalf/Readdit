@model IEnumerable<Readdit.Models.Book>

@using Microsoft.AspNetCore.Identity;
@using Readdit.Areas.Identity.Data;
@using Readdit.Models;

@{
    ViewData["Title"] = "Home";
}

<!DOCTYPE html>
<html>
<head>
    <style>
        #bookTable.collapsed table {
            display: none;
        }
    </style>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Handlee">
    <script>
        function searchBooks() {
            // Declare variables
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("bookSearchInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("bookTable");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0]; // Assuming the book name is in the first column
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    </script>
</head>
<body>
    <h1>Welcome back!</h1>


    <input type="text" id="bookSearchInput" onkeyup="searchBooks()" placeholder="Search for books..."> 
    <button id="toggleTableBtn">Toggle Table</button>

    <div id="bookTable">
    <table>
        <thead>
            <tr>
                <th>Book Name</th>
                <th>Author</th>
                <th>Genre</th>
            </tr>
        </thead>
        <tbody>
            <!-- Loop through books from the database and populate the table -->
                @foreach (var book in Model)
                {
                    <tr>
                        <td>@book.book_name</td>
                        <td>@book.author_name</td>
                        <td>@book.book_genre</td>
                        <td>
                        <button class="add-to-list-btn" onclick="addToToBeReadList('@book.book_id')">Add to To Be Read</button>
                        </td>
                    </tr>
                }
        </tbody>
    </table>
    </

    <h3>My Lists</h3>
    <div class="container text-center">
        <div class="row align-items-start">
            <div class="col">
                <p>To Be Read</p>
                <a href="/Members/ToBeRead">Go to To Be Read list</a>
            </div>
            <div class="col">
                <p>Currently Reading</p>
                <a href="/Members/CurrentlyReading">Go to Currently Reading list</a>
            </div>
            <div class="col">
                <p>Completed Reading</p>
                <a href="/Members/Read">Go to Completed Reading list</a>
            </div>
        </div>
    </div>

    <div class="container text-center">
        <div class="row align-items-start">
            <div class="col">
                <p>Set a goal to read more this year!</p>
                <p>I want to read <input type="number" id="goal" min="1" value="1"> books in 2024</p>
                <!-- Add functionality to the Start Goal button -->
                <button type="button" class="btn-light" onclick="startGoal()">Start Goal</button>
            </div>
        </div>
    </div>

    <script>
        function startGoal() {
            var goal = document.getElementById("goal").value;
            // Add functionality to track goal progress based on completed books
            // For example, you can send an AJAX request to the server to update the goal progress
            alert("Goal set to " + goal + " books.");
        }

            // Get references to the button and table container
            var toggleBtn = document.getElementById('toggleTableBtn');
            var bookTable = document.getElementById('bookTable');

            // Add click event listener to the button
            toggleBtn.addEventListener('click', function () {
            // Toggle the 'collapsed' class on the table container
            bookTable.classList.toggle('collapsed');
            });

            function addToToBeReadList(book_id) {
                // Send AJAX request to add the book to the To Be Read list
                fetch('/Members/AddToToBeReadList', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ book_id: book_id })
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.href = '/Members/ToBeRead';
                            // Book added successfully
                            alert('Book added to To Be Read list!');
                        } else {
                            // Handle error response
                            alert('Failed to add book to To Be Read list.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while adding the book to To Be Read list.');
                    });
            }


    </script>
</body>
</html>
